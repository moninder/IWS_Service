//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;

namespace AirportIQ.Model.EF.SAFE
{
    public partial class SafeEntities : DbContext
    {
        public SafeEntities()
            : base("name=SafeEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Safe_CitationPoliceOfficers> Safe_CitationPoliceOfficers { get; set; }
        public DbSet<Safe_Citations> Safe_Citations { get; set; }
        public DbSet<Safe_CitationViolations> Safe_CitationViolations { get; set; }
        public DbSet<Safe_Hearings> Safe_Hearings { get; set; }
        public DbSet<Safe_VehicleBodyTypes> Safe_VehicleBodyTypes { get; set; }
        public DbSet<Safe_VehicleMakes> Safe_VehicleMakes { get; set; }
        public DbSet<Safe_Violations> Safe_Violations { get; set; }
        public DbSet<Safe_ViolationTypes> Safe_ViolationTypes { get; set; }
        public DbSet<Safe_HearingPoliceOfficers> Safe_HearingPoliceOfficers { get; set; }
        public DbSet<Person_FullName> Person_FullName { get; set; }
        public DbSet<Person_PersonDivisionXref> Person_PersonDivisionXref { get; set; }
        public DbSet<Safe_Officers> Safe_Officers { get; set; }
        public DbSet<Company_Companies> Company_Companies { get; set; }
        public DbSet<Division_Divisions> Division_Divisions { get; set; }
        public DbSet<Person_Badges> Person_Badges { get; set; }
        public DbSet<Badges_Info> Badges_Info { get; set; }
        public DbSet<Documents> Documents { get; set; }
        public DbSet<Common_Requirement_DocumentsRequired> Common_Requirement_DocumentsRequired { get; set; }
        public DbSet<Person_FullName_LastFirst> Person_FullName_LastFirst { get; set; }
        public DbSet<LEO_OfficerBadges> LEO_OfficerBadges { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Company_List_CompanyID_ByFacility(string facilityCode)
        {
            var facilityCodeParameter = facilityCode != null ?
                new ObjectParameter("FacilityCode", facilityCode) :
                new ObjectParameter("FacilityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Company_List_CompanyID_ByFacility", facilityCodeParameter);
        }
    }
}
